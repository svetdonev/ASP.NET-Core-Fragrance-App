@{
    ViewData["Title"] = "Profile";
}

@model ProfileViewModel

<h2>Profile</h2>

<div class="row">
    <div class="col-md-3">
        <h4>Settings</h4>
        <ul class="nav flex-column">
            <li class="nav-item">
                <a class="nav-link active" href="#" id="editProfileLink">Edit Profile</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#">Favorites</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#">Comments</a>
            </li>
        </ul>
    </div>
    <div class="col-md-6" id="profileInfo">
        @await Html.PartialAsync("_ProfileSummary", Model)
        @await Html.PartialAsync("_ProfileForm", Model)
    </div>
    <div class="col-md-3">
        @await Html.PartialAsync("_ChangeAvatar", Model)
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var output = document.getElementById('ProfilePicturePreview');
            var imageUrlInput = $('#ImageUrl');

            var defaultAvatarUrl = '@GetDefaultAvatar(Model.Gender)'; // Pass the default avatar URL to JavaScript

            imageUrlInput.on("input", function () {
                var url = $(this).val();
                output.src = url ? url : defaultAvatarUrl;
            });

            // Clear the avatar input field after successful update
            var clearAvatarInput = @Html.Raw(TempData["AvatarUpdateSuccess"] != null ? "true" : "false");
            if (clearAvatarInput) {
                $('#ImageUrl').val('');
            }
        });
    </script>
}

@functions {
    private string GetDefaultAvatar(string gender)
    {
        return gender switch
        {
            "Male" => "base64stringForDefaultMaleAvatar",
            "Female" => "base64stringForDefaultFemaleAvatar",
            _ => "base64stringForDefaultOtherAvatar"
        };
    }
}
